1. Spring IOC Container 
      The IOC (Inversion of Control) container in Spring is a core concept responsible 
for managing the lifecycle and dependencies of objects, known as beans.
It helps implement Dependency Injection (DI), which means that the control of creating 
and managing objects is transferred from the application code to the Spring framework.

   the IOC container helps achieve loose coupling between objects by handling their creation, 
lifecycle, and dependencies, making the code cleaner and easier to test.



2.  What is Spring Boot Auto-Configuration, and how does it work?

Explanation:

In Spring Boot, auto-configuration is one of its powerful features. When you add a specific dependency in Spring Boot, it automatically configures the components required for that dependency. For example, if you add the spring-boot-starter-web dependency, Spring Boot will automatically configure everything needed for a web application (like DispatcherServlet, ViewResolver, etc.).

How does it work?

@EnableAutoConfiguration Annotation: In Spring Boot applications, we use the @SpringBootApplication annotation. This annotation includes @EnableAutoConfiguration, which triggers the auto-configuration process.

Auto-Configuration Classes: There are specific classes in Spring Boot dedicated to auto-configuration (like WebMvcAutoConfiguration, JpaAutoConfiguration). These are listed in the spring.factories file in Spring Boot.

Conditionally Load: The auto-configuration classes are conditionally loaded based on the dependencies you’ve added. For instance, if you add the spring-boot-starter-data-jpa dependency, the JpaAutoConfiguration class will be loaded, but only if the required dependencies for Spring Data JPA are present.

Custom Configuration: You can also customize the configuration. If you don’t want to use a specific auto-configuration, you can exclude it using @EnableAutoConfiguration(exclude = ClassName.class).

Spring Boot’s auto-configuration simplifies the setup process, allowing you to focus on essential configuration by writing minimal code, while Spring Boot handles the rest.
